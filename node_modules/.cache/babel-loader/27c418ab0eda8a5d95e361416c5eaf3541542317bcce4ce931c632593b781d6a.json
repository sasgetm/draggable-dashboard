{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"pre-title\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"span\", _hoisted_1, _toDisplayString(_ctx.$route.params.id), 1 /* TEXT */), _createElementVNode(\"h1\", null, _toDisplayString($options.cardTitle), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($options.cardDescription), 1 /* TEXT */)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_createElementVNode","_hoisted_1","_toDisplayString","_ctx","$route","params","id","$options","cardTitle","cardDescription"],"sources":["/Users/a123/Documents/делание/тестовые задания/2024/аналитикум плюс челябинск vue dashboard/dashboard-draggable/src/pages/CardPage.vue"],"sourcesContent":["<template>\n  <div>\n    <span class=\"pre-title\">{{ $route.params.id }}</span>\n    <h1>{{ cardTitle }}</h1>\n    <p>{{ cardDescription }}</p>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\n\nexport default {\n  computed: {\n    ...mapState({\n      cards: state => state.cards,\n    }),\n    cardId() {\n      return this.$route.params.id;\n    },\n    getElement() {\n      return this.cards.find(obj => obj._id == this.cardId);\n    },\n    cardTitle() {\n      const element = this.getElement;\n      return element ? element.title : 'Card not found';\n    },\n    cardDescription() {\n      const element = this.getElement;\n      return element ? element.description : 'Card not found';\n    },\n  },\n}\n</script>\n\n<style scoped>\n</style>"],"mappings":";;EAEUA,KAAK,EAAC;AAAW;;uBADzBC,mBAAA,CAIM,cAHJC,mBAAA,CAAqD,QAArDC,UAAqD,EAAAC,gBAAA,CAA1BC,IAAA,CAAAC,MAAM,CAACC,MAAM,CAACC,EAAE,kBAC3CN,mBAAA,CAAwB,YAAAE,gBAAA,CAAjBK,QAAA,CAAAC,SAAS,kBAChBR,mBAAA,CAA4B,WAAAE,gBAAA,CAAtBK,QAAA,CAAAE,eAAe,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}