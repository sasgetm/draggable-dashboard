{"ast":null,"code":"import Card from '@/components/Card';\nexport default {\n  components: {\n    Card\n  },\n  props: {\n    cards: {\n      type: Array,\n      required: true\n    }\n  }\n};\nfunction sortable(section, onUpdate) {\n  var dragEl, nextEl, newPos, dragGhost;\n  let oldPos = [...section.children].map(item => {\n    item.draggable = true;\n    let pos = document.getElementById(item.id).getBoundingClientRect();\n    return pos;\n  });\n  function _onDragOver(e) {\n    e.preventDefault();\n    e.dataTransfer.dropEffect = 'move';\n    var target = e.target;\n    if (target && target !== dragEl && target.nodeName == 'DIV') {\n      if (target.classList.contains('inside')) {\n        e.stopPropagation();\n      } else {\n        //getBoundinClientRect contains location-info about the element (relative to the viewport)\n        var targetPos = target.getBoundingClientRect();\n        //checking that dragEl is dragged over half the target y-axis or x-axis. (therefor the .5)\n        var next = (e.clientY - targetPos.top) / (targetPos.bottom - targetPos.top) > .5 || (e.clientX - targetPos.left) / (targetPos.right - targetPos.left) > .5;\n        section.insertBefore(dragEl, next && target.nextSibling || target);\n\n        /*  console.log(\"oldPos:\" + JSON.stringify(oldPos));\n         console.log(\"newPos:\" + JSON.stringify(newPos)); */\n        /* console.log(newPos.top === oldPos.top ? 'They are the same' : 'Not the same'); */\n        console.log(oldPos);\n      }\n    }\n  }\n  function _onDragEnd(evt) {\n    evt.preventDefault();\n    newPos = [...section.children].map(child => {\n      let pos = document.getElementById(child.id).getBoundingClientRect();\n      return pos;\n    });\n    console.log(newPos);\n    dragEl.classList.remove('ghost');\n    section.removeEventListener('dragover', _onDragOver, false);\n    section.removeEventListener('dragend', _onDragEnd, false);\n    nextEl !== dragEl.nextSibling ? onUpdate(dragEl) : false;\n  }\n  section.addEventListener('dragstart', function (e) {\n    dragEl = e.target;\n    nextEl = dragEl.nextSibling;\n    /* dragGhost = dragEl.cloneNode(true);\n    dragGhost.classList.add('hidden-drag-ghost'); */\n\n    /*  document.body.appendChild(dragGhost);\n     e.dataTransfer.setDragImage(dragGhost, 0, 0); */\n\n    e.dataTransfer.effectAllowed = 'move';\n    e.dataTransfer.setData('Text', dragEl.textContent);\n    section.addEventListener('dragover', _onDragOver, false);\n    section.addEventListener('dragend', _onDragEnd, false);\n    setTimeout(function () {\n      dragEl.classList.add('ghost');\n    }, 0);\n  });\n}\nsortable(document.getElementById('list'), function (item) {\n  /* console.log(item); */\n});","map":{"version":3,"names":["Card","components","props","cards","type","Array","required","sortable","section","onUpdate","dragEl","nextEl","newPos","dragGhost","oldPos","children","map","item","draggable","pos","document","getElementById","id","getBoundingClientRect","_onDragOver","e","preventDefault","dataTransfer","dropEffect","target","nodeName","classList","contains","stopPropagation","targetPos","next","clientY","top","bottom","clientX","left","right","insertBefore","nextSibling","console","log","_onDragEnd","evt","child","remove","removeEventListener","addEventListener","effectAllowed","setData","textContent","setTimeout","add"],"sources":["/Users/a123/Documents/делание/тестовые задания/2024/аналитикум плюс челябинск vue dashboard/dashboard/src/components/CardsList.vue"],"sourcesContent":["<template>\n  <!-- <div v-if=\"cards.length > 0\"> -->\n  <div id=\"list\" class=\"cards-list\">\n    <transition-group name=\"cards-list\">\n      <card\n        v-for=\"card in cards\"\n        :card=\"card\"\n        :key=\"card.id\"\n        @remove=\"$emit('remove', card)\"\n      />\n    </transition-group>\n  </div>\n  <!-- <div v-else>\n    <p>Нет постов</p>\n  </div> -->\n</template>\n\n<script>\nimport Card from '@/components/Card';\nexport default {\n  components: {\n    Card,\n  },\n  props: {\n    cards: {\n      type: Array,\n      required: true,\n    }\n  }\n}\n\n\n\nfunction sortable(section, onUpdate){\n    var dragEl, nextEl, newPos, dragGhost;\n \n    let oldPos = [...section.children].map(item => {\n      item.draggable = true\n      let pos = document.getElementById(item.id).getBoundingClientRect();\n      return pos;\n    });\n   \n    function _onDragOver(e){\n        e.preventDefault();\n        e.dataTransfer.dropEffect = 'move';\n        \n        var target = e.target;\n        if( target && target !== dragEl && target.nodeName == 'DIV' ){\n          if(target.classList.contains('inside')) {\n            e.stopPropagation();\n          } else {\n      //getBoundinClientRect contains location-info about the element (relative to the viewport)\n          var targetPos = target.getBoundingClientRect();\n           //checking that dragEl is dragged over half the target y-axis or x-axis. (therefor the .5)\n          var next = (e.clientY - targetPos.top) / (targetPos.bottom - targetPos.top) > .5 || (e.clientX - targetPos.left) / (targetPos.right - targetPos.left) > .5;    \n            section.insertBefore(dragEl, next && target.nextSibling || target);\n             \n            /*  console.log(\"oldPos:\" + JSON.stringify(oldPos));\n             console.log(\"newPos:\" + JSON.stringify(newPos)); */\n             /* console.log(newPos.top === oldPos.top ? 'They are the same' : 'Not the same'); */\n           console.log(oldPos);\n            }\n        }   \n    }\n    \n    function _onDragEnd(evt){\n        evt.preventDefault();\n        newPos = [...section.children].map(child => {      \n             let pos = document.getElementById(child.id).getBoundingClientRect();\n             return pos;\n           });\n        console.log(newPos);\n        dragEl.classList.remove('ghost');\n        section.removeEventListener('dragover', _onDragOver, false);\n        section.removeEventListener('dragend', _onDragEnd, false);\n\n        nextEl !== dragEl.nextSibling ? onUpdate(dragEl) : false;\n    }\n       \n      section.addEventListener('dragstart', function(e){     \n        dragEl = e.target; \n        nextEl = dragEl.nextSibling;\n        /* dragGhost = dragEl.cloneNode(true);\n        dragGhost.classList.add('hidden-drag-ghost'); */\n        \n       /*  document.body.appendChild(dragGhost);\n        e.dataTransfer.setDragImage(dragGhost, 0, 0); */\n    \n        e.dataTransfer.effectAllowed = 'move';\n        e.dataTransfer.setData('Text', dragEl.textContent);\n      \n        section.addEventListener('dragover', _onDragOver, false);\n        section.addEventListener('dragend', _onDragEnd, false);\n         \n        setTimeout(function (){\n            dragEl.classList.add('ghost');\n        }, 0)\n       \n    });\n}\n                                          \nsortable( document.getElementById('list'), function (item){\n    /* console.log(item); */\n});\n\n\n</script>\n\n<style scoped>\n.cards-list {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-auto-flow: row dense;\n  gap: 24px;\n}\n.cards-list-enter-active,\n.cards-list-leave-active {\n  transition: all .3s ease;\n}\n.cards-list-enter-from,\n.cards-list-leave-to {\n  opacity: 0;\n  transform: translateX(30px);\n}\n.cards-list-move {\n  transition: transform 0.3s ease;\n}\n\n\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}