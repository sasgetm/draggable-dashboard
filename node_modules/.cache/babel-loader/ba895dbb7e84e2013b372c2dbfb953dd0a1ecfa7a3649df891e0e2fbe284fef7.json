{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h1\", null, _toDisplayString($options.cardTitle), 1), _createElementVNode(\"p\", null, _toDisplayString($options.cardDescription), 1)]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","$options","cardTitle","cardDescription"],"sources":["/Users/a123/Documents/делание/тестовые задания/2024/аналитикум плюс челябинск vue dashboard/dashboard-draggable/src/pages/CardPage.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>{{ cardTitle }}</h1>\n    <p>{{ cardDescription }}</p>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex';\n\nexport default {\n  computed: {\n    ...mapState({\n      cards: state => state.cards,\n    }),\n    cardId() {\n      return this.$route.params.id;\n    },\n    getElement() {\n      return this.cards.find(obj => obj._id == this.cardId);\n    },\n    cardTitle() {\n      const element = this.getElement;\n      return element ? element.title : 'Card not found';\n    },\n    cardDescription() {\n      const element = this.getElement;\n      return element ? element.description : 'Card not found';\n    },\n  },\n}\n</script>\n\n<style scoped>\n</style>"],"mappings":";;uBACEA,mBAAA,CAGM,cAFJC,mBAAA,CAAwB,YAAAC,gBAAA,CAAjBC,QAAA,CAAAC,SAAS,OAChBH,mBAAA,CAA4B,WAAAC,gBAAA,CAAtBC,QAAA,CAAAE,eAAe,M","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}