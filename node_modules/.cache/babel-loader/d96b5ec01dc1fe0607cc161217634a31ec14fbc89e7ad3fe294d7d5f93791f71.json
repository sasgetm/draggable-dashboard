{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport PostForm from '@/components/PostForm';\nimport PostList from '@/components/PostList';\nimport axios from 'axios';\nexport default {\n  components: {\n    PostForm,\n    PostList\n  },\n  data() {\n    return {\n      posts: [],\n      dialogVisible: false,\n      isPostsLoading: false,\n      selectedSort: '',\n      sortOptions: [{\n        value: 'title',\n        name: 'По заголовку'\n      }, {\n        value: 'body',\n        name: 'По содержанию'\n      }],\n      searchQuery: '',\n      page: 1,\n      limit: 10,\n      totalPages: 0\n    };\n  },\n  methods: {\n    createPost(post) {\n      this.posts.push(post);\n      this.dialogVisible = false;\n    },\n    removePost(post) {\n      this.posts = this.posts.filter(p => p.id !== post.id);\n    },\n    showDialog() {\n      this.dialogVisible = true;\n    },\n    async fetchPosts() {\n      console.log('one');\n      try {\n        this.isPostsLoading = true;\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\n          params: {\n            _page: this.page,\n            _limit: this.limit\n          }\n        });\n        this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit);\n        this.posts = response.data;\n      } catch (error) {\n        alert('Ошибка');\n        console.log(error);\n      } finally {\n        this.isPostsLoading = false;\n      }\n    },\n    async loadMorePosts() {\n      console.log('two');\n      try {\n        this.page += 1;\n        // this.isPostsLoading = true;\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\n          params: {\n            _page: this.page,\n            _limit: this.limit\n          }\n        });\n        this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit);\n        this.posts = [...this.posts, ...response.data];\n      } catch (error) {\n        alert('Ошибка');\n        console.log(error);\n      } finally {\n        // this.isPostsLoading = false;\n      }\n    },\n    changePage(pageNumber) {\n      this.page = pageNumber;\n      this.fetchPosts();\n    }\n  },\n  mounted() {\n    this.fetchPosts();\n  },\n  computed: {\n    sortedPosts() {\n      return [...this.posts].sort((post1, post2) => {\n        return post1[this.selectedSort]?.localeCompare(post2[this.selectedSort]);\n      });\n    },\n    sortedAndSearchedPosts() {\n      return this.sortedPosts.filter(post => {\n        return post.title.toLowerCase().includes(this.searchQuery.toLowerCase());\n      });\n    }\n  }\n  // watch: {\n  //   selectedSort(newValue) {\n  //     this.posts.sort((post1, post2) => {\n  //       return post1[newValue]?.localeCompare(post2[newValue])\n  //     })\n  //   }\n  // }\n  // watch: {\n  //   page() {\n  //     this.fetchPosts();\n  //   }\n  // }\n};","map":{"version":3,"names":["PostForm","PostList","axios","components","data","posts","dialogVisible","isPostsLoading","selectedSort","sortOptions","value","name","searchQuery","page","limit","totalPages","methods","createPost","post","push","removePost","filter","p","id","showDialog","fetchPosts","console","log","response","get","params","_page","_limit","Math","ceil","headers","error","alert","loadMorePosts","changePage","pageNumber","mounted","computed","sortedPosts","sort","post1","post2","localeCompare","sortedAndSearchedPosts","title","toLowerCase","includes"],"sources":["/Users/a123/Documents/делание/тестовые задания/2024/аналитикум плюс челябинск vue dashboard/dashboard/src/pages/Main.vue"],"sourcesContent":["<template>\n  <div class=\"dashboard\">\n    <h1>Дашборд</h1>\n    <my-button @click=\"$router.push('/add-cards')\">Добавить</my-button>\n    <cards-list></cards-list>\n  </div>\n\n\n  <div>\n    <div class=\"header\">\n      <h1>Страница с постами</h1>\n      <!-- <my-button\n        @click=\"fetchPosts\"\n      >Получить посты</my-button> -->\n      <my-input placeholder=\"Найти пост\" v-model=\"searchQuery\"></my-input>\n\n      <div class=\"app__btns\">\n        <my-button\n          @click=\"showDialog\"\n        >Создать пост</my-button>\n        <my-select\n          v-model=\"selectedSort\"\n          :options=\"sortOptions\"\n        ></my-select>\n      </div>\n    </div>\n\n    <my-dialog v-model:show=\"dialogVisible\">\n      <post-form\n        @create=\"createPost\"\n      /><!-- kebab-case -->\n    </my-dialog>\n\n    <div class=\"pagination\">\n      <div\n        v-for=\"pageNumber in totalPages\"\n        :key=\"pageNumber\"\n        class=\"pagination__item\"\n        :class=\"{\n          'pagination__item_current': page === pageNumber,\n        }\"\n        @click=\"changePage(pageNumber)\"\n      >\n        {{ pageNumber }}\n      </div>\n    </div>\n\n    <post-list\n      :posts=\"sortedAndSearchedPosts\"\n      @remove=\"removePost\"\n      v-if=\"!isPostsLoading\"\n    /><!-- <PostList v-bind:posts=\"posts\" /> - не сокращенная запись -->\n    <div v-else>\n      <p>Идет загрузка</p>\n    </div>\n\n    <div v-intersection=\"loadMorePosts\" class=\"observer\"></div>\n  </div>\n</template>\n\n<script>\nimport PostForm from '@/components/PostForm';\nimport PostList from '@/components/PostList';\nimport axios from 'axios';\n\nexport default {\n  components: {\n    PostForm, PostList\n  },\n  data() {\n    return {\n      posts: [],\n      dialogVisible: false,\n      isPostsLoading: false,\n      selectedSort: '',\n      sortOptions: [\n        {\n          value: 'title',\n          name: 'По заголовку',\n        },\n        {\n          value: 'body',\n          name: 'По содержанию',\n        },\n      ],\n      searchQuery: '',\n      page: 1,\n      limit: 10,\n      totalPages: 0,\n    }\n  },\n  methods: {\n    createPost(post) {\n      this.posts.push(post);\n      this.dialogVisible = false;\n    },\n    removePost(post) {\n      this.posts = this.posts.filter(p => p.id !== post.id)\n    },\n    showDialog() {\n      this.dialogVisible = true;\n    },\n    async fetchPosts() {\n      console.log('one');\n      try {\n        this.isPostsLoading = true;\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\n          params: {\n            _page: this.page,\n            _limit: this.limit,\n          }\n        });\n        this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit);\n        this.posts = response.data;\n      } catch (error) {\n        alert('Ошибка');\n        console.log(error);\n      } finally {\n        this.isPostsLoading = false;\n      }\n    },\n    async loadMorePosts() {\n      console.log('two');\n      try {\n        this.page +=1;\n        // this.isPostsLoading = true;\n        const response = await axios.get('https://jsonplaceholder.typicode.com/posts', {\n          params: {\n            _page: this.page,\n            _limit: this.limit,\n          }\n        });\n        this.totalPages = Math.ceil(response.headers['x-total-count'] / this.limit);\n        this.posts = [...this.posts, ...response.data];\n      } catch (error) {\n        alert('Ошибка');\n        console.log(error);\n      } finally {\n        // this.isPostsLoading = false;\n      }\n    },\n    changePage(pageNumber) {\n      this.page = pageNumber;\n      this.fetchPosts();\n    },\n  },\n  mounted() {\n    this.fetchPosts();\n  },\n  computed: {\n    sortedPosts () {\n      return [...this.posts].sort((post1, post2) => {\n        return post1[this.selectedSort]?.localeCompare(post2[this.selectedSort])\n      })\n    },\n    sortedAndSearchedPosts() {\n      return this.sortedPosts.filter(post => {\n        return post.title.toLowerCase().includes(this.searchQuery.toLowerCase());\n      })\n    } \n  },\n  // watch: {\n  //   selectedSort(newValue) {\n  //     this.posts.sort((post1, post2) => {\n  //       return post1[newValue]?.localeCompare(post2[newValue])\n  //     })\n  //   }\n  // }\n  // watch: {\n  //   page() {\n  //     this.fetchPosts();\n  //   }\n  // }\n}\n</script>\n\n<style>\nh1 {\n  margin-bottom: 24px;\n}\n.header {\n  margin-bottom: 24px;\n}\n.app__btns {\n  display: flex;\n  justify-content: space-between;\n}\n.pagination {\n  width: 600px;\n  max-width: 100%;\n  display: flex;\n  justify-content: center;\n  gap: 24px;\n  margin: auto;\n}\n.pagination__item {\n  padding: 12px;\n  border-radius: 8px;\n  margin: 16px 0;\n  border: 1px solid #ccc;\n  cursor: pointer;\n}\n.pagination__item:hover {\n  background: #ffdceb;\n}\n.pagination__item_current {\n  background: #fff3f8;\n}\n.observer {\n  height: 10px;\n  background: #ccc;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}