{"ast":null,"code":"import { vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _withDirectives((_openBlock(), _createElementBlock(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.textValue = $event),\n    onInput: _cache[1] || (_cache[1] = (...args) => $options.handleInput && $options.handleInput(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */)), [[_vModelText, $data.textValue]]);\n}","map":{"version":3,"names":["_createElementBlock","_cache","$event","$data","textValue","onInput","args","$options","handleInput"],"sources":["/Users/a123/Documents/делание/тестовые задания/2024/аналитикум плюс челябинск vue dashboard/dashboard-draggable/src/components/UI/MyTextarea.vue"],"sourcesContent":["<template>\n  <textarea v-model=\"textValue\" @input=\"handleInput\"></textarea>\n</template>\n\n<script>\nexport default {\n  name: 'my-textarea',\n  props: {\n    value: [String],\n  },\n  data() {\n    return {\n      textValue: this.value,\n    };\n  },\n  watch: {\n    value(newValue) {\n      this.textValue = newValue;\n    },\n  },\n  methods: {\n    updateInput(event) {\n      this.$emit('update:modelValue', event.target.value)\n      // this.$emit('update:other', event.target.value)\n    },\n    handleInput() {\n      this.$emit('input', this.textValue);\n    },\n  }\n}\n</script>\n\n<style scoped>\n\ntextarea {\n  width: 100%;\n  padding: 16px;\n  border-radius: 8px;\n  margin: 16px 0;\n  border: 1px solid #ccc;\n  display: block;\n}\n</style>"],"mappings":";;wCACEA,mBAAA,CAA8D;IADhE,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IACqBC,KAAA,CAAAC,SAAS,GAAAF,MAAA;IAAGG,OAAK,EAAAJ,MAAA,QAAAA,MAAA,UAAAK,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;kEAA9BH,KAAA,CAAAC,SAAS,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}