{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, TransitionGroup as _TransitionGroup, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-b6e93bbe\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"list\",\n  class: \"cards-list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_card = _resolveComponent(\"card\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <div v-if=\\\"cards.length > 0\\\"> \"), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_TransitionGroup, {\n    name: \"cards-list\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.cards, card => {\n      return _openBlock(), _createBlock(_component_card, {\n        card: card,\n        key: card.id,\n        onRemove: $event => _ctx.$emit('remove', card)\n      }, null, 8 /* PROPS */, [\"card\", \"onRemove\"]);\n    }), 128 /* KEYED_FRAGMENT */))]),\n    _: 1 /* STABLE */\n  })]), _createCommentVNode(\" <div v-else>\\n    <p>Нет постов</p>\\n  </div> \")], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"names":["id","class","_createElementBlock","_Fragment","_createCommentVNode","_createElementVNode","_hoisted_1","_createVNode","_TransitionGroup","name","default","_withCtx","_renderList","$props","cards","card","_createBlock","_component_card","key","onRemove","$event","_ctx","$emit","_"],"sources":["/Users/a123/Documents/делание/тестовые задания/2024/аналитикум плюс челябинск vue dashboard/dashboard/src/components/CardsList.vue"],"sourcesContent":["<template>\n  <!-- <div v-if=\"cards.length > 0\"> -->\n  <div id=\"list\" class=\"cards-list\">\n    <transition-group name=\"cards-list\">\n      <card\n        v-for=\"card in cards\"\n        :card=\"card\"\n        :key=\"card.id\"\n        @remove=\"$emit('remove', card)\"\n      />\n    </transition-group>\n  </div>\n  <!-- <div v-else>\n    <p>Нет постов</p>\n  </div> -->\n</template>\n\n<script>\nimport Card from '@/components/Card';\nexport default {\n  components: {\n    Card,\n  },\n  props: {\n    cards: {\n      type: Array,\n      required: true,\n    }\n  }\n}\n\n\n\nfunction sortable(section, onUpdate){\n    var dragEl, nextEl, newPos, dragGhost;\n \n    let oldPos = [...section.children].map(item => {\n      item.draggable = true\n      let pos = document.getElementById(item.id).getBoundingClientRect();\n      return pos;\n    });\n   \n    function _onDragOver(e){\n        e.preventDefault();\n        e.dataTransfer.dropEffect = 'move';\n        \n        var target = e.target;\n        if( target && target !== dragEl && target.nodeName == 'DIV' ){\n          if(target.classList.contains('inside')) {\n            e.stopPropagation();\n          } else {\n      //getBoundinClientRect contains location-info about the element (relative to the viewport)\n          var targetPos = target.getBoundingClientRect();\n           //checking that dragEl is dragged over half the target y-axis or x-axis. (therefor the .5)\n          var next = (e.clientY - targetPos.top) / (targetPos.bottom - targetPos.top) > .5 || (e.clientX - targetPos.left) / (targetPos.right - targetPos.left) > .5;    \n            section.insertBefore(dragEl, next && target.nextSibling || target);\n             \n            /*  console.log(\"oldPos:\" + JSON.stringify(oldPos));\n             console.log(\"newPos:\" + JSON.stringify(newPos)); */\n             /* console.log(newPos.top === oldPos.top ? 'They are the same' : 'Not the same'); */\n           console.log(oldPos);\n            }\n        }   \n    }\n    \n    function _onDragEnd(evt){\n        evt.preventDefault();\n        newPos = [...section.children].map(child => {      \n             let pos = document.getElementById(child.id).getBoundingClientRect();\n             return pos;\n           });\n        console.log(newPos);\n        dragEl.classList.remove('ghost');\n        section.removeEventListener('dragover', _onDragOver, false);\n        section.removeEventListener('dragend', _onDragEnd, false);\n\n        nextEl !== dragEl.nextSibling ? onUpdate(dragEl) : false;\n    }\n       \n      section.addEventListener('dragstart', function(e){     \n        dragEl = e.target; \n        nextEl = dragEl.nextSibling;\n        /* dragGhost = dragEl.cloneNode(true);\n        dragGhost.classList.add('hidden-drag-ghost'); */\n        \n       /*  document.body.appendChild(dragGhost);\n        e.dataTransfer.setDragImage(dragGhost, 0, 0); */\n    \n        e.dataTransfer.effectAllowed = 'move';\n        e.dataTransfer.setData('Text', dragEl.textContent);\n      \n        section.addEventListener('dragover', _onDragOver, false);\n        section.addEventListener('dragend', _onDragEnd, false);\n         \n        setTimeout(function (){\n            dragEl.classList.add('ghost');\n        }, 0)\n       \n    });\n}\n                                          \nsortable( document.getElementById('list'), function (item){\n    /* console.log(item); */\n});\n\n\n</script>\n\n<style scoped>\n.cards-list {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  grid-auto-flow: row dense;\n  gap: 24px;\n}\n.cards-list-enter-active,\n.cards-list-leave-active {\n  transition: all .3s ease;\n}\n.cards-list-enter-from,\n.cards-list-leave-to {\n  opacity: 0;\n  transform: translateX(30px);\n}\n.cards-list-move {\n  transition: transform 0.3s ease;\n}\n\n\n</style>"],"mappings":";;;EAEOA,EAAE,EAAC,MAAM;EAACC,KAAK,EAAC;;;;uBAFvBC,mBAAA,CAAAC,SAAA,SACEC,mBAAA,qCAAsC,EACtCC,mBAAA,CASM,OATNC,UASM,GARJC,YAAA,CAOmBC,gBAAA;IAPDC,IAAI,EAAC;EAAY;IAHvCC,OAAA,EAAAC,QAAA,CAKQ,MAAqB,E,kBADvBT,mBAAA,CAKEC,SAAA,QATRS,WAAA,CAKuBC,MAAA,CAAAC,KAAK,EAAbC,IAAI;2BADbC,YAAA,CAKEC,eAAA;QAHCF,IAAI,EAAEA,IAAI;QACVG,GAAG,EAAEH,IAAI,CAACf,EAAE;QACZmB,QAAM,EAAAC,MAAA,IAAEC,IAAA,CAAAC,KAAK,WAAWP,IAAI;;;IARrCQ,CAAA;QAYEnB,mBAAA,mDAEU,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}