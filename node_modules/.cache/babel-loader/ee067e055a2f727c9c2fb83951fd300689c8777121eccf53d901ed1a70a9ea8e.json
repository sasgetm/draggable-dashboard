{"ast":null,"code":"import { createStore } from \"vuex\";\nexport default createStore({\n  state: () => ({\n    cards: [{\n      _id: 1,\n      title: 'Chick Corea',\n      description: 'Children\\'s Song No. 6'\n    }, {\n      _id: 2,\n      title: 'Pat Metheny',\n      description: 'Antonia'\n    }, {\n      _id: 3,\n      title: 'Chick Corea',\n      description: 'Children\\'s Song No. 6'\n    }, {\n      _id: 4,\n      title: 'Pat Metheny',\n      description: 'Antonia'\n    }, {\n      _id: 5,\n      title: 'Chick Corea',\n      description: 'Children\\'s Song No. 6'\n    }, {\n      _id: 6,\n      title: 'Pat Metheny',\n      description: 'Antonia'\n    }, {\n      _id: 7,\n      title: 'Chick Corea',\n      description: 'Children\\'s Song No. 6'\n    }, {\n      _id: 8,\n      title: 'Pat Metheny',\n      description: 'Antonia'\n    }]\n  }),\n  getters: {\n    cards(state) {\n      return state.posts;\n    }\n  },\n  mutations: {\n    setCards(state, cards) {\n      state.cards = cards;\n    },\n    saveState(state) {\n      localStorage.setItem('dashboard-state', JSON.stringify(state));\n      localStorage.setItem('cartCount', state.cartCount);\n    },\n    initializeStore(state) {\n      try {\n        state.cart = JSON.parse(localStorage.getItem('cart')) ? JSON.parse(localStorage.getItem('cart')) : [];\n        state.cartCount = parseInt(localStorage.getItem('cartCount')) ? parseInt(localStorage.getItem('cartCount')) : 0;\n      } catch {\n        localStorage.setItem('cart', JSON.stringify(state.cart));\n      }\n    }\n  },\n  actions: {\n    addCard({\n      state,\n      commit\n    }) {\n      // return state.cards += 1;\n    },\n    removeCard({\n      state,\n      commit\n    }) {\n      // return state.cards += 1;\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","state","cards","_id","title","description","getters","posts","mutations","setCards","saveState","localStorage","setItem","JSON","stringify","cartCount","initializeStore","cart","parse","getItem","parseInt","actions","addCard","commit","removeCard","modules"],"sources":["/Users/a123/Documents/делание/тестовые задания/2024/аналитикум плюс челябинск vue dashboard/dashboard-draggable/src/store/index.js"],"sourcesContent":["import { createStore } from \"vuex\";\n\nexport default createStore ({\n  state: () => ({\n    cards: [\n      {\n        _id: 1,\n        title: 'Chick Corea',\n        description: 'Children\\'s Song No. 6',\n      },\n      {\n        _id: 2,\n        title: 'Pat Metheny',\n        description: 'Antonia',\n      },\n      {\n        _id: 3,\n        title: 'Chick Corea',\n        description: 'Children\\'s Song No. 6',\n      },\n      {\n        _id: 4,\n        title: 'Pat Metheny',\n        description: 'Antonia',\n      },\n      {\n        _id: 5,\n        title: 'Chick Corea',\n        description: 'Children\\'s Song No. 6',\n      },\n      {\n        _id: 6,\n        title: 'Pat Metheny',\n        description: 'Antonia',\n      },\n      {\n        _id: 7,\n        title: 'Chick Corea',\n        description: 'Children\\'s Song No. 6',\n      },\n      {\n        _id: 8,\n        title: 'Pat Metheny',\n        description: 'Antonia',\n      },\n    ],\n  }),\n  getters: {\n    cards (state) {\n      return state.posts;\n    }\n  },\n  mutations: {\n    setCards(state, cards) {\n      state.cards = cards;\n    },\n    saveState(state) {\n      localStorage.setItem('dashboard-state', JSON.stringify(state));\n      localStorage.setItem('cartCount', state.cartCount);\n    },\n    initializeStore(state) {\n      try {\n        state.cart = JSON.parse(localStorage.getItem('cart'))? JSON.parse(localStorage.getItem('cart')):[]\n        state.cartCount = parseInt(localStorage.getItem('cartCount'))? parseInt(localStorage.getItem('cartCount')):0\n      } catch {\n        localStorage.setItem('cart', JSON.stringify(state.cart))\n      }\n    },\n  },\n  actions: {\n    addCard ({state, commit}) {\n      // return state.cards += 1;\n    },\n    removeCard ({state, commit}) {\n      // return state.cards += 1;\n    },\n  },\n  modules: {},\n})"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAE;EAC1BC,KAAK,EAAEA,CAAA,MAAO;IACZC,KAAK,EAAE,CACL;MACEC,GAAG,EAAE,CAAC;MACNC,KAAK,EAAE,aAAa;MACpBC,WAAW,EAAE;IACf,CAAC,EACD;MACEF,GAAG,EAAE,CAAC;MACNC,KAAK,EAAE,aAAa;MACpBC,WAAW,EAAE;IACf,CAAC,EACD;MACEF,GAAG,EAAE,CAAC;MACNC,KAAK,EAAE,aAAa;MACpBC,WAAW,EAAE;IACf,CAAC,EACD;MACEF,GAAG,EAAE,CAAC;MACNC,KAAK,EAAE,aAAa;MACpBC,WAAW,EAAE;IACf,CAAC,EACD;MACEF,GAAG,EAAE,CAAC;MACNC,KAAK,EAAE,aAAa;MACpBC,WAAW,EAAE;IACf,CAAC,EACD;MACEF,GAAG,EAAE,CAAC;MACNC,KAAK,EAAE,aAAa;MACpBC,WAAW,EAAE;IACf,CAAC,EACD;MACEF,GAAG,EAAE,CAAC;MACNC,KAAK,EAAE,aAAa;MACpBC,WAAW,EAAE;IACf,CAAC,EACD;MACEF,GAAG,EAAE,CAAC;MACNC,KAAK,EAAE,aAAa;MACpBC,WAAW,EAAE;IACf,CAAC;EAEL,CAAC,CAAC;EACFC,OAAO,EAAE;IACPJ,KAAKA,CAAED,KAAK,EAAE;MACZ,OAAOA,KAAK,CAACM,KAAK;IACpB;EACF,CAAC;EACDC,SAAS,EAAE;IACTC,QAAQA,CAACR,KAAK,EAAEC,KAAK,EAAE;MACrBD,KAAK,CAACC,KAAK,GAAGA,KAAK;IACrB,CAAC;IACDQ,SAASA,CAACT,KAAK,EAAE;MACfU,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAEC,IAAI,CAACC,SAAS,CAACb,KAAK,CAAC,CAAC;MAC9DU,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEX,KAAK,CAACc,SAAS,CAAC;IACpD,CAAC;IACDC,eAAeA,CAACf,KAAK,EAAE;MACrB,IAAI;QACFA,KAAK,CAACgB,IAAI,GAAGJ,IAAI,CAACK,KAAK,CAACP,YAAY,CAACQ,OAAO,CAAC,MAAM,CAAC,CAAC,GAAEN,IAAI,CAACK,KAAK,CAACP,YAAY,CAACQ,OAAO,CAAC,MAAM,CAAC,CAAC,GAAC,EAAE;QAClGlB,KAAK,CAACc,SAAS,GAAGK,QAAQ,CAACT,YAAY,CAACQ,OAAO,CAAC,WAAW,CAAC,CAAC,GAAEC,QAAQ,CAACT,YAAY,CAACQ,OAAO,CAAC,WAAW,CAAC,CAAC,GAAC,CAAC;MAC9G,CAAC,CAAC,MAAM;QACNR,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACb,KAAK,CAACgB,IAAI,CAAC,CAAC;MAC1D;IACF;EACF,CAAC;EACDI,OAAO,EAAE;IACPC,OAAOA,CAAE;MAACrB,KAAK;MAAEsB;IAAM,CAAC,EAAE;MACxB;IAAA,CACD;IACDC,UAAUA,CAAE;MAACvB,KAAK;MAAEsB;IAAM,CAAC,EAAE;MAC3B;IAAA;EAEJ,CAAC;EACDE,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}